version: "3.9"

services:
  mongo:
    image: mongo:6.0
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "8089:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    depends_on:
      mongo:
        condition: service_healthy

  user-ms:
    build:
      context: .
      dockerfile: services/user-ms/Dockerfile
    container_name: user-ms
    ports:
      - "8080:8080"     # HTTP
      - "50051:50051"   # gRPC
    environment:
      MONGO_URI: mongodb://root:example@mongo:27017/userdb?authSource=admin
      USER_HTTP_PORT: ":8080"
      USER_GRPC_PORT: ":50051"
    depends_on:
      mongo:
        condition: service_healthy

  product-ms:
    build:
      context: .
      dockerfile: services/product-ms/Dockerfile
    container_name: product-ms
    ports:
      - "8081:8081"
      - "50052:50052"
    environment:
      MONGO_URI: mongodb://root:example@mongo:27017/productdb?authSource=admin
      PRODUCT_HTTP_PORT: ":8081"
      PRODUCT_GRPC_PORT: ":50052"
    depends_on:
      mongo:
        condition: service_healthy

  order-ms:
    build:
      context: .
      dockerfile: services/order-ms/Dockerfile
    container_name: order-ms
    ports:
      - "8084:8084"
      - "50054:50054"
    environment:
      MONGO_URI: mongodb://root:example@mongo:27017/orderdb?authSource=admin
      ORDER_HTTP_PORT: ":8084"
      ORDER_GRPC_PORT: ":50054"
    depends_on:
      mongo:
        condition: service_healthy
      user-ms:
        condition: service_started
      product-ms:
        condition: service_started

  cart-ms:
    build:
      context: .
      dockerfile: services/cart-ms/Dockerfile
    container_name: cart-ms
    ports:
      - "8083:8083"
      - "50053:50053"
    environment:
      MONGO_URI: mongodb://root:example@mongo:27017/cartdb?authSource=admin
      CART_HTTP_PORT: ":8083"
      CART_GRPC_PORT: ":50053"
    depends_on:
      mongo:
        condition: service_healthy
      user-ms:
        condition: service_started
      product-ms:
        condition: service_started

  payment-ms:
    build:
      context: .
      dockerfile: services/payment-ms/Dockerfile
    container_name: payment-ms
    ports:
      - "8085:8085"
      - "50055:50055"
    environment:
      MONGO_URI: mongodb://root:example@mongo:27017/paymentdb?authSource=admin
      PAYMENT_HTTP_PORT: ":8085"
      PAYMENT_GRPC_PORT: ":50055"
    depends_on:
      mongo:
        condition: service_healthy
      order-ms:
        condition: service_started

volumes:
  mongo_data:
