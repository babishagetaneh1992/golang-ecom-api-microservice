basePath: /
definitions:
  http.AddItemRequest:
    properties:
      product_id:
        type: string
      quantity:
        minimum: 1
        type: integer
    required:
    - product_id
    - quantity
    type: object
host: localhost:8083
info:
  contact:
    email: support@example.com
    name: API Support
  description: This is the Cart service for the e-commerce system.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Cart Microservice API
  version: "1.0"
paths:
  /carts:
    get:
      description: Get the authenticated user's cart
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get Cart
      tags:
      - Cart
  /carts/add:
    post:
      consumes:
      - application/json
      description: Add a new product to the user's cart
      parameters:
      - description: Cart item
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/http.AddItemRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Add Item to Cart
      tags:
      - Cart
  /carts/clear:
    delete:
      description: Remove all items from the user's cart
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Clear Cart
      tags:
      - Cart
  /carts/remove:
    delete:
      description: Remove an item from the user's cart by product_id
      parameters:
      - description: Product ID
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Remove Item from Cart
      tags:
      - Cart
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
